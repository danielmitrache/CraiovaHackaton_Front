<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/src/app/app.routes.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/app/app.routes.ts" />
              <option name="originalContent" value="import { Routes } from '@angular/router';&#10;import { CarServicesComponent } from './car-services/car-services.component';&#10;import { MainPageComponent } from './main-page/main-page';&#10;import { LoginPageComponent } from './login-page/login-page';&#10;import { CreateAccountComponent } from './create-account/create-account';&#10;&#10;export const routes: Routes = [&#10;  { path: '', component: MainPageComponent },&#10;  { path: 'login', component: LoginPageComponent },&#10;  { path: 'signup', component: CreateAccountComponent },&#10;  { path: 'services', component: CarServicesComponent }&#10;];&#10;" />
              <option name="updatedContent" value="import { Routes } from '@angular/router';&#10;import { CarServicesComponent } from './car-services/car-services.component';&#10;import { MainPageComponent } from './main-page/main-page';&#10;import { LoginPageComponent } from './login-page/login-page';&#10;import { RegisterPageComponent } from './register-page/register-page';&#10;&#10;export const routes: Routes = [&#10;  { path: '', component: MainPageComponent },&#10;  { path: 'main-page', component: MainPageComponent },&#10;  { path: 'login', component: LoginPageComponent },&#10;  { path: 'register', component: RegisterPageComponent },&#10;  { path: 'services', component: CarServicesComponent }&#10;];" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/app/main-page/main-page.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/app/main-page/main-page.css" />
              <option name="originalContent" value="/* ========================================&#10;   MAIN PAGE COMPONENT STYLES&#10;   ======================================== */&#10;&#10;:host {&#10;  display: block;&#10;  width: 100%;&#10;  min-height: 100vh;&#10;}&#10;&#10;/* Layout Structure */&#10;.landing-root {&#10;  min-height: 100vh;&#10;  display: flex;&#10;  flex-direction: column;&#10;  background: linear-gradient(180deg, var(--color-dark) 0%, #1a1f26 50%, var(--color-secondary) 100%);&#10;}&#10;&#10;/* ========================================&#10;   NAVIGATION BAR&#10;   ======================================== */&#10;&#10;.nav {&#10;  display: flex;&#10;  align-items: center;&#10;  justify-content: space-between;&#10;  padding: 18px 32px;&#10;  background: rgba(57, 62, 70, 0.7);&#10;  backdrop-filter: blur(12px);&#10;  border-bottom: var(--border-subtle);&#10;  position: sticky;&#10;  top: 0;&#10;  z-index: var(--z-sticky);&#10;  transition: all var(--transition-base);&#10;}&#10;&#10;.nav:hover {&#10;  background: rgba(57, 62, 70, 0.85);&#10;}&#10;&#10;.brand {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-sm);&#10;}&#10;&#10;.logo {&#10;  color: var(--color-accent);&#10;  filter: drop-shadow(0 0 10px rgba(148, 137, 121, 0.4));&#10;  transition: transform var(--transition-fast);&#10;}&#10;&#10;.logo:hover {&#10;  transform: scale(1.1) rotate(5deg);&#10;}&#10;&#10;.title {&#10;  font-weight: var(--font-bold);&#10;  font-size: var(--font-lg);&#10;  letter-spacing: -0.01em;&#10;  color: var(--color-light);&#10;  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);&#10;}&#10;&#10;.nav-actions {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-sm);&#10;}&#10;&#10;/* Navigation Buttons */&#10;.icon-btn,&#10;.user-btn {&#10;  background: transparent;&#10;  border-radius: var(--radius-md);&#10;  border: var(--border-subtle);&#10;  color: var(--color-text-secondary);&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-xs);&#10;  cursor: pointer;&#10;  transition: all var(--transition-fast);&#10;  font-size: var(--font-sm);&#10;  font-family: inherit;&#10;}&#10;&#10;.icon-btn {&#10;  padding: 8px 12px;&#10;}&#10;&#10;.icon-btn:hover {&#10;  background: rgba(148, 137, 121, 0.15);&#10;  border-color: var(--color-accent);&#10;  color: var(--color-accent);&#10;  transform: translateY(-1px);&#10;}&#10;&#10;.icon-btn .icon {&#10;  font-size: var(--font-lg);&#10;  font-weight: var(--font-bold);&#10;}&#10;&#10;.user-btn {&#10;  padding: 6px 14px;&#10;  border-color: var(--color-accent);&#10;}&#10;&#10;.user-btn:hover {&#10;  background: rgba(148, 137, 121, 0.2);&#10;  box-shadow: var(--shadow-glow);&#10;  transform: translateY(-1px);&#10;}&#10;&#10;.user-btn svg {&#10;  color: var(--color-accent);&#10;}&#10;&#10;.user-name {&#10;  color: var(--color-light);&#10;  font-weight: var(--font-semibold);&#10;}&#10;&#10;/* ========================================&#10;   HERO SECTION&#10;   ======================================== */&#10;&#10;.hero {&#10;  flex: 1;&#10;  display: flex;&#10;  align-items: center;&#10;  justify-content: center;&#10;  padding: var(--space-3xl) var(--space-md);&#10;}&#10;&#10;.card {&#10;  max-width: 1100px;&#10;  width: 100%;&#10;  background: linear-gradient(135deg, rgba(57, 62, 70, 0.95) 0%, rgba(45, 51, 59, 0.9) 100%);&#10;  box-shadow: var(--shadow-xl);&#10;  padding: var(--space-2xl) 48px;&#10;  border-radius: var(--radius-xl);&#10;  border: var(--border-medium);&#10;  backdrop-filter: blur(10px);&#10;  transition: all var(--transition-slow);&#10;}&#10;&#10;.card:hover {&#10;  box-shadow: var(--shadow-xl), var(--shadow-accent);&#10;}&#10;&#10;/* Badge Container */&#10;.badge-container {&#10;  display: flex;&#10;  flex-wrap: wrap;&#10;  gap: var(--space-xs);&#10;  margin-bottom: var(--space-lg);&#10;  justify-content: center;&#10;}&#10;&#10;.badge {&#10;  display: inline-block;&#10;  background: linear-gradient(90deg, rgba(148, 137, 121, 0.25), rgba(148, 137, 121, 0.15));&#10;  color: var(--color-accent);&#10;  padding: 6px 16px;&#10;  border-radius: var(--radius-full);&#10;  font-size: var(--font-sm);&#10;  font-weight: var(--font-semibold);&#10;  border: 1px solid rgba(148, 137, 121, 0.3);&#10;  transition: all var(--transition-fast);&#10;}&#10;&#10;.badge:hover {&#10;  background: linear-gradient(90deg, rgba(148, 137, 121, 0.35), rgba(148, 137, 121, 0.25));&#10;  transform: translateY(-2px);&#10;}&#10;&#10;/* Hero Title */&#10;.hero-title {&#10;  margin: 0 0 var(--space-lg);&#10;  font-size: var(--font-3xl);&#10;  line-height: 1.2;&#10;  font-weight: var(--font-extrabold);&#10;  letter-spacing: -0.02em;&#10;  color: var(--color-light);&#10;  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);&#10;  text-align: center;&#10;}&#10;&#10;/* Lead Paragraph */&#10;.lead {&#10;  margin: 0 0 var(--space-2xl);&#10;  color: var(--color-text-secondary);&#10;  font-size: var(--font-lg);&#10;  line-height: 1.7;&#10;  text-align: center;&#10;  max-width: 900px;&#10;  margin-left: auto;&#10;  margin-right: auto;&#10;}&#10;&#10;.lead strong {&#10;  color: var(--color-accent);&#10;  font-weight: var(--font-bold);&#10;}&#10;&#10;.lead em {&#10;  font-style: italic;&#10;  color: var(--color-light);&#10;}&#10;&#10;/* ========================================&#10;   CONCEPT CARDS GRID&#10;   ======================================== */&#10;&#10;.concept-grid {&#10;  display: grid;&#10;  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#10;  gap: var(--space-lg);&#10;  margin-bottom: var(--space-2xl);&#10;}&#10;&#10;.concept-card {&#10;  background: linear-gradient(135deg, rgba(57, 62, 70, 0.7), rgba(34, 40, 49, 0.7));&#10;  border: var(--border-medium);&#10;  border-radius: var(--radius-lg);&#10;  padding: var(--space-xl);&#10;  transition: all var(--transition-base);&#10;  position: relative;&#10;  overflow: hidden;&#10;}&#10;&#10;.concept-card::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  height: 3px;&#10;  background: linear-gradient(90deg, var(--color-accent), var(--color-accent-light));&#10;  opacity: 0;&#10;  transition: opacity var(--transition-base);&#10;}&#10;&#10;.concept-card:hover {&#10;  transform: translateY(-8px);&#10;  box-shadow: var(--shadow-lg);&#10;  border-color: var(--color-accent);&#10;  background: linear-gradient(135deg, rgba(57, 62, 70, 0.85), rgba(34, 40, 49, 0.85));&#10;}&#10;&#10;.concept-card:hover::before {&#10;  opacity: 1;&#10;}&#10;&#10;.concept-icon {&#10;  font-size: 3rem;&#10;  margin-bottom: var(--space-md);&#10;  filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.4));&#10;  display: block;&#10;}&#10;&#10;.concept-title {&#10;  font-size: var(--font-lg);&#10;  font-weight: var(--font-bold);&#10;  margin-bottom: var(--space-sm);&#10;  color: var(--color-light);&#10;}&#10;&#10;.concept-desc {&#10;  font-size: var(--font-base);&#10;  color: var(--color-text-secondary);&#10;  line-height: 1.6;&#10;}&#10;&#10;/* ========================================&#10;   CTA BUTTONS&#10;   ======================================== */&#10;&#10;.cta-row {&#10;  display: flex;&#10;  gap: var(--space-md);&#10;  margin-bottom: var(--space-lg);&#10;}&#10;&#10;.btn {&#10;  display: inline-flex;&#10;  align-items: center;&#10;  justify-content: center;&#10;  gap: var(--space-sm);&#10;  padding: 16px 32px;&#10;  border-radius: var(--radius-lg);&#10;  text-decoration: none;&#10;  border: 2px solid transparent;&#10;  font-weight: var(--font-semibold);&#10;  font-size: var(--font-base);&#10;  cursor: pointer;&#10;  transition: all var(--transition-base);&#10;  flex: 1;&#10;  font-family: inherit;&#10;  position: relative;&#10;  overflow: hidden;&#10;}&#10;&#10;.btn::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 50%;&#10;  left: 50%;&#10;  width: 0;&#10;  height: 0;&#10;  border-radius: 50%;&#10;  background: rgba(255, 255, 255, 0.1);&#10;  transform: translate(-50%, -50%);&#10;  transition: width 0.6s, height 0.6s;&#10;}&#10;&#10;.btn:hover::before {&#10;  width: 300px;&#10;  height: 300px;&#10;}&#10;&#10;/* Primary Button (Left - Make Appointment) */&#10;.btn-primary {&#10;  background: linear-gradient(90deg, var(--color-accent), var(--color-accent-light));&#10;  color: var(--color-dark);&#10;  box-shadow: var(--shadow-glow);&#10;  border-color: var(--color-accent);&#10;}&#10;&#10;.btn-primary:hover {&#10;  transform: translateY(-3px);&#10;  box-shadow: 0 8px 30px rgba(148, 137, 121, 0.5);&#10;  background: linear-gradient(90deg, var(--color-accent-light), var(--color-accent));&#10;}&#10;&#10;.btn-primary:active {&#10;  transform: translateY(-1px);&#10;}&#10;&#10;/* Outline Button (Right - View Garages) */&#10;.btn-outline {&#10;  background: transparent;&#10;  color: var(--color-light);&#10;  border-color: var(--color-accent);&#10;}&#10;&#10;.btn-outline:hover {&#10;  background: rgba(148, 137, 121, 0.15);&#10;  transform: translateY(-3px);&#10;  box-shadow: var(--shadow-md);&#10;  border-color: var(--color-accent-light);&#10;}&#10;&#10;.btn-outline:active {&#10;  transform: translateY(-1px);&#10;}&#10;&#10;.btn-ic {&#10;  opacity: 0.9;&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;/* Micro Text (Pro Tip) */&#10;.micro {&#10;  margin-top: var(--space-lg);&#10;  color: var(--color-text-muted);&#10;  font-size: var(--font-sm);&#10;  line-height: 1.6;&#10;  text-align: center;&#10;  padding: var(--space-md);&#10;  background: rgba(148, 137, 121, 0.05);&#10;  border-radius: var(--radius-md);&#10;  border: var(--border-subtle);&#10;}&#10;&#10;.micro strong {&#10;  color: var(--color-accent);&#10;  font-weight: var(--font-bold);&#10;}&#10;&#10;/* ========================================&#10;   RESPONSIVE DESIGN&#10;   ======================================== */&#10;&#10;@media (max-width: 768px) {&#10;  .nav {&#10;    padding: 14px 20px;&#10;  }&#10;&#10;  .card {&#10;    padding: var(--space-xl) var(--space-lg);&#10;    border-radius: var(--radius-lg);&#10;  }&#10;&#10;  .hero-title {&#10;    font-size: var(--font-2xl);&#10;  }&#10;&#10;  .lead {&#10;    font-size: var(--font-base);&#10;  }&#10;&#10;  .concept-grid {&#10;    grid-template-columns: 1fr;&#10;    gap: var(--space-md);&#10;  }&#10;&#10;  .concept-card {&#10;    padding: var(--space-lg);&#10;  }&#10;&#10;  .cta-row {&#10;    flex-direction: column;&#10;  }&#10;&#10;  .btn {&#10;    width: 100%;&#10;    padding: 14px 24px;&#10;  }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;  .user-name,&#10;  .icon-btn .label {&#10;    display: none;&#10;  }&#10;&#10;  .badge-container {&#10;    justify-content: center;&#10;  }&#10;&#10;  .badge {&#10;    font-size: var(--font-xs);&#10;    padding: 5px 12px;&#10;  }&#10;&#10;  .hero-title {&#10;    font-size: var(--font-xl);&#10;  }&#10;&#10;  .lead {&#10;    font-size: var(--font-sm);&#10;  }&#10;&#10;  .concept-icon {&#10;    font-size: 2.5rem;&#10;  }&#10;&#10;  .micro {&#10;    font-size: var(--font-xs);&#10;    padding: var(--space-sm);&#10;  }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="/* ========================================&#10;   MAIN PAGE COMPONENT STYLES&#10;   ======================================== */&#10;&#10;:host {&#10;  display: block;&#10;  width: 100%;&#10;  min-height: 100vh;&#10;}&#10;&#10;/* Layout Structure */&#10;.landing-root {&#10;  min-height: 100vh;&#10;  display: flex;&#10;  flex-direction: column;&#10;  background: linear-gradient(180deg, var(--color-dark) 0%, #1a1f26 50%, var(--color-secondary) 100%);&#10;}&#10;&#10;/* ========================================&#10;   NAVIGATION BAR&#10;   ======================================== */&#10;&#10;.nav {&#10;  display: flex;&#10;  align-items: center;&#10;  justify-content: space-between;&#10;  padding: 18px 32px;&#10;  background: rgba(57, 62, 70, 0.7);&#10;  backdrop-filter: blur(12px);&#10;  border-bottom: var(--border-subtle);&#10;  position: sticky;&#10;  top: 0;&#10;  z-index: var(--z-sticky);&#10;  transition: all var(--transition-base);&#10;}&#10;&#10;.nav:hover {&#10;  background: rgba(57, 62, 70, 0.85);&#10;}&#10;&#10;.brand {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-sm);&#10;}&#10;&#10;.logo {&#10;  color: var(--color-accent);&#10;  filter: drop-shadow(0 0 10px rgba(148, 137, 121, 0.4));&#10;  transition: transform var(--transition-fast);&#10;}&#10;&#10;.logo:hover {&#10;  transform: scale(1.1) rotate(5deg);&#10;}&#10;&#10;.title {&#10;  font-weight: var(--font-bold);&#10;  font-size: var(--font-lg);&#10;  letter-spacing: -0.01em;&#10;  color: var(--color-light);&#10;  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);&#10;}&#10;&#10;.nav-actions {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-sm);&#10;}&#10;&#10;.auth-buttons {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-xs);&#10;}&#10;&#10;/* Navigation Buttons */&#10;.icon-btn,&#10;.user-btn,&#10;.btn-login,&#10;.btn-register {&#10;  background: transparent;&#10;  border-radius: var(--radius-md);&#10;  border: var(--border-subtle);&#10;  color: var(--color-text-secondary);&#10;  display: flex;&#10;  align-items: center;&#10;  gap: var(--space-xs);&#10;  cursor: pointer;&#10;  transition: all var(--transition-fast);&#10;  font-size: var(--font-sm);&#10;  font-family: inherit;&#10;}&#10;&#10;.icon-btn {&#10;  padding: 8px 12px;&#10;}&#10;&#10;.icon-btn:hover {&#10;  background: rgba(148, 137, 121, 0.15);&#10;  border-color: var(--color-accent);&#10;  color: var(--color-accent);&#10;  transform: translateY(-1px);&#10;}&#10;&#10;.icon-btn .icon {&#10;  font-size: var(--font-lg);&#10;  font-weight: var(--font-bold);&#10;}&#10;&#10;.btn-login {&#10;  padding: 8px 16px;&#10;  background: linear-gradient(90deg, var(--color-accent), var(--color-accent-light));&#10;  border-color: var(--color-accent);&#10;  color: var(--color-dark);&#10;  font-weight: var(--font-semibold);&#10;  box-shadow: 0 2px 8px rgba(148, 137, 121, 0.3);&#10;}&#10;&#10;.btn-login:hover {&#10;  background: linear-gradient(90deg, var(--color-accent-light), var(--color-light));&#10;  box-shadow: 0 4px 12px rgba(148, 137, 121, 0.5);&#10;  transform: translateY(-2px);&#10;}&#10;&#10;.btn-login svg {&#10;  color: var(--color-dark);&#10;  opacity: 0.9;&#10;}&#10;&#10;.login-text,&#10;.register-text {&#10;  font-weight: var(--font-semibold);&#10;}&#10;&#10;.btn-register {&#10;  padding: 8px 16px;&#10;  background: transparent;&#10;  border-color: var(--color-accent);&#10;  color: var(--color-light);&#10;  font-weight: var(--font-semibold);&#10;}&#10;&#10;.btn-register:hover {&#10;  background: rgba(148, 137, 121, 0.2);&#10;  border-color: var(--color-accent-light);&#10;  box-shadow: 0 4px 12px rgba(148, 137, 121, 0.3);&#10;  transform: translateY(-2px);&#10;}&#10;&#10;.btn-register svg {&#10;  color: var(--color-accent);&#10;}&#10;&#10;.user-btn {&#10;  padding: 6px 14px;&#10;  border-color: var(--color-accent);&#10;}&#10;&#10;.user-btn:hover {&#10;  background: rgba(148, 137, 121, 0.2);&#10;  box-shadow: var(--shadow-glow);&#10;  transform: translateY(-1px);&#10;}&#10;&#10;.user-btn svg {&#10;  color: var(--color-accent);&#10;}&#10;&#10;.user-name {&#10;  color: var(--color-light);&#10;  font-weight: var(--font-semibold);&#10;}&#10;&#10;/* ========================================&#10;   HERO SECTION&#10;   ======================================== */&#10;&#10;.hero {&#10;  flex: 1;&#10;  display: flex;&#10;  align-items: center;&#10;  justify-content: center;&#10;  padding: var(--space-3xl) var(--space-md);&#10;}&#10;&#10;.card {&#10;  max-width: 1100px;&#10;  width: 100%;&#10;  background: linear-gradient(135deg, rgba(57, 62, 70, 0.95) 0%, rgba(45, 51, 59, 0.9) 100%);&#10;  box-shadow: var(--shadow-xl);&#10;  padding: var(--space-2xl) 48px;&#10;  border-radius: var(--radius-xl);&#10;  border: var(--border-medium);&#10;  backdrop-filter: blur(10px);&#10;  transition: all var(--transition-slow);&#10;}&#10;&#10;.card:hover {&#10;  box-shadow: var(--shadow-xl), var(--shadow-accent);&#10;}&#10;&#10;/* Badge Container */&#10;.badge-container {&#10;  display: flex;&#10;  flex-wrap: wrap;&#10;  gap: var(--space-xs);&#10;  margin-bottom: var(--space-lg);&#10;  justify-content: center;&#10;}&#10;&#10;.badge {&#10;  display: inline-block;&#10;  background: linear-gradient(90deg, rgba(148, 137, 121, 0.25), rgba(148, 137, 121, 0.15));&#10;  color: var(--color-accent);&#10;  padding: 6px 16px;&#10;  border-radius: var(--radius-full);&#10;  font-size: var(--font-sm);&#10;  font-weight: var(--font-semibold);&#10;  border: 1px solid rgba(148, 137, 121, 0.3);&#10;  transition: all var(--transition-fast);&#10;}&#10;&#10;.badge:hover {&#10;  background: linear-gradient(90deg, rgba(148, 137, 121, 0.35), rgba(148, 137, 121, 0.25));&#10;  transform: translateY(-2px);&#10;}&#10;&#10;/* Hero Title */&#10;.hero-title {&#10;  margin: 0 0 var(--space-lg);&#10;  font-size: var(--font-3xl);&#10;  line-height: 1.2;&#10;  font-weight: var(--font-extrabold);&#10;  letter-spacing: -0.02em;&#10;  color: var(--color-light);&#10;  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);&#10;  text-align: center;&#10;}&#10;&#10;/* Lead Paragraph */&#10;.lead {&#10;  margin: 0 0 var(--space-2xl);&#10;  color: var(--color-text-secondary);&#10;  font-size: var(--font-lg);&#10;  line-height: 1.7;&#10;  text-align: center;&#10;  max-width: 900px;&#10;  margin-left: auto;&#10;  margin-right: auto;&#10;}&#10;&#10;.lead strong {&#10;  color: var(--color-accent);&#10;  font-weight: var(--font-bold);&#10;}&#10;&#10;.lead em {&#10;  font-style: italic;&#10;  color: var(--color-light);&#10;}&#10;&#10;/* ========================================&#10;   CONCEPT CARDS GRID&#10;   ======================================== */&#10;&#10;.concept-grid {&#10;  display: grid;&#10;  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#10;  gap: var(--space-lg);&#10;  margin-bottom: var(--space-2xl);&#10;}&#10;&#10;.concept-card {&#10;  background: linear-gradient(135deg, rgba(57, 62, 70, 0.7), rgba(34, 40, 49, 0.7));&#10;  border: var(--border-medium);&#10;  border-radius: var(--radius-lg);&#10;  padding: var(--space-xl);&#10;  transition: all var(--transition-base);&#10;  position: relative;&#10;  overflow: hidden;&#10;}&#10;&#10;.concept-card::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  height: 3px;&#10;  background: linear-gradient(90deg, var(--color-accent), var(--color-accent-light));&#10;  opacity: 0;&#10;  transition: opacity var(--transition-base);&#10;}&#10;&#10;.concept-card:hover {&#10;  transform: translateY(-8px);&#10;  box-shadow: var(--shadow-lg);&#10;  border-color: var(--color-accent);&#10;  background: linear-gradient(135deg, rgba(57, 62, 70, 0.85), rgba(34, 40, 49, 0.85));&#10;}&#10;&#10;.concept-card:hover::before {&#10;  opacity: 1;&#10;}&#10;&#10;.concept-icon {&#10;  font-size: 3rem;&#10;  margin-bottom: var(--space-md);&#10;  filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.4));&#10;  display: block;&#10;}&#10;&#10;.concept-title {&#10;  font-size: var(--font-lg);&#10;  font-weight: var(--font-bold);&#10;  margin-bottom: var(--space-sm);&#10;  color: var(--color-light);&#10;}&#10;&#10;.concept-desc {&#10;  font-size: var(--font-base);&#10;  color: var(--color-text-secondary);&#10;  line-height: 1.6;&#10;}&#10;&#10;/* ========================================&#10;   CTA BUTTONS&#10;   ======================================== */&#10;&#10;.cta-row {&#10;  display: flex;&#10;  gap: var(--space-md);&#10;  margin-bottom: var(--space-lg);&#10;}&#10;&#10;.btn {&#10;  display: inline-flex;&#10;  align-items: center;&#10;  justify-content: center;&#10;  gap: var(--space-sm);&#10;  padding: 16px 32px;&#10;  border-radius: var(--radius-lg);&#10;  text-decoration: none;&#10;  border: 2px solid transparent;&#10;  font-weight: var(--font-semibold);&#10;  font-size: var(--font-base);&#10;  cursor: pointer;&#10;  transition: all var(--transition-base);&#10;  flex: 1;&#10;  font-family: inherit;&#10;  position: relative;&#10;  overflow: hidden;&#10;}&#10;&#10;.btn::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 50%;&#10;  left: 50%;&#10;  width: 0;&#10;  height: 0;&#10;  border-radius: 50%;&#10;  background: rgba(255, 255, 255, 0.1);&#10;  transform: translate(-50%, -50%);&#10;  transition: width 0.6s, height 0.6s;&#10;}&#10;&#10;.btn:hover::before {&#10;  width: 300px;&#10;  height: 300px;&#10;}&#10;&#10;/* Primary Button (Left - Make Appointment) */&#10;.btn-primary {&#10;  background: linear-gradient(90deg, var(--color-accent), var(--color-accent-light));&#10;  color: var(--color-dark);&#10;  box-shadow: var(--shadow-glow);&#10;  border-color: var(--color-accent);&#10;}&#10;&#10;.btn-primary:hover {&#10;  transform: translateY(-3px);&#10;  box-shadow: 0 8px 30px rgba(148, 137, 121, 0.5);&#10;  background: linear-gradient(90deg, var(--color-accent-light), var(--color-accent));&#10;}&#10;&#10;.btn-primary:active {&#10;  transform: translateY(-1px);&#10;}&#10;&#10;/* Outline Button (Right - View Garages) */&#10;.btn-outline {&#10;  background: transparent;&#10;  color: var(--color-light);&#10;  border-color: var(--color-accent);&#10;}&#10;&#10;.btn-outline:hover {&#10;  background: rgba(148, 137, 121, 0.15);&#10;  transform: translateY(-3px);&#10;  box-shadow: var(--shadow-md);&#10;  border-color: var(--color-accent-light);&#10;}&#10;&#10;.btn-outline:active {&#10;  transform: translateY(-1px);&#10;}&#10;&#10;.btn-ic {&#10;  opacity: 0.9;&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;/* Micro Text (Pro Tip) */&#10;.micro {&#10;  margin-top: var(--space-lg);&#10;  color: var(--color-text-muted);&#10;  font-size: var(--font-sm);&#10;  line-height: 1.6;&#10;  text-align: center;&#10;  padding: var(--space-md);&#10;  background: rgba(148, 137, 121, 0.05);&#10;  border-radius: var(--radius-md);&#10;  border: var(--border-subtle);&#10;}&#10;&#10;.micro strong {&#10;  color: var(--color-accent);&#10;  font-weight: var(--font-bold);&#10;}&#10;&#10;/* ========================================&#10;   RESPONSIVE DESIGN&#10;   ======================================== */&#10;&#10;@media (max-width: 768px) {&#10;  .nav {&#10;    padding: 14px 20px;&#10;  }&#10;&#10;  .card {&#10;    padding: var(--space-xl) var(--space-lg);&#10;    border-radius: var(--radius-lg);&#10;  }&#10;&#10;  .hero-title {&#10;    font-size: var(--font-2xl);&#10;  }&#10;&#10;  .lead {&#10;    font-size: var(--font-base);&#10;  }&#10;&#10;  .concept-grid {&#10;    grid-template-columns: 1fr;&#10;    gap: var(--space-md);&#10;  }&#10;&#10;  .concept-card {&#10;    padding: var(--space-lg);&#10;  }&#10;&#10;  .cta-row {&#10;    flex-direction: column;&#10;  }&#10;&#10;  .btn {&#10;    width: 100%;&#10;    padding: 14px 24px;&#10;  }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;  .user-name,&#10;  .icon-btn .label {&#10;    display: none;&#10;  }&#10;&#10;  .badge-container {&#10;    justify-content: center;&#10;  }&#10;&#10;  .badge {&#10;    font-size: var(--font-xs);&#10;    padding: 5px 12px;&#10;  }&#10;&#10;  .hero-title {&#10;    font-size: var(--font-xl);&#10;  }&#10;&#10;  .lead {&#10;    font-size: var(--font-sm);&#10;  }&#10;&#10;  .concept-icon {&#10;    font-size: 2.5rem;&#10;  }&#10;&#10;  .micro {&#10;    font-size: var(--font-xs);&#10;    padding: var(--space-sm);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/app/main-page/main-page.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/app/main-page/main-page.html" />
              <option name="originalContent" value="&lt;div class=&quot;landing-root&quot;&gt;&#10;  &lt;!-- Navigation Bar --&gt;&#10;  &lt;header class=&quot;nav&quot;&gt;&#10;    &lt;div class=&quot;brand&quot;&gt;&#10;      &lt;!-- Car icon logo --&gt;&#10;      &lt;svg class=&quot;logo&quot; width=&quot;36&quot; height=&quot;36&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;        &lt;rect x=&quot;2&quot; y=&quot;8&quot; width=&quot;20&quot; height=&quot;8&quot; rx=&quot;2&quot; fill=&quot;currentColor&quot;/&gt;&#10;        &lt;circle cx=&quot;7&quot; cy=&quot;17&quot; r=&quot;1.8&quot; fill=&quot;currentColor&quot;/&gt;&#10;        &lt;circle cx=&quot;17&quot; cy=&quot;17&quot; r=&quot;1.8&quot; fill=&quot;currentColor&quot;/&gt;&#10;      &lt;/svg&gt;&#10;      &lt;span class=&quot;title&quot;&gt;BrakePoint&lt;/span&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;nav class=&quot;nav-actions&quot;&gt;&#10;      &lt;!-- More details button --&gt;&#10;      &lt;button class=&quot;icon-btn&quot; (click)=&quot;onMoreDetails()&quot; aria-label=&quot;More details&quot;&gt;&#10;        &lt;span class=&quot;icon&quot;&gt;⋯&lt;/span&gt;&#10;        &lt;span class=&quot;label&quot;&gt;More&lt;/span&gt;&#10;      &lt;/button&gt;&#10;&#10;      &lt;!-- User profile button --&gt;&#10;      &lt;button class=&quot;user-btn&quot; (click)=&quot;onUserProfile()&quot; aria-label=&quot;User profile&quot;&gt;&#10;        &lt;svg width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;          &lt;path d=&quot;M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4z&quot; fill=&quot;currentColor&quot;/&gt;&#10;          &lt;path d=&quot;M4 20c0-3.3137 2.6863-6 6-6h4c3.3137 0 6 2.6863 6 6&quot; fill=&quot;currentColor&quot; opacity=&quot;0.9&quot;/&gt;&#10;        &lt;/svg&gt;&#10;        &lt;span class=&quot;user-name&quot;&gt;{{ userName }}&lt;/span&gt;&#10;      &lt;/button&gt;&#10;    &lt;/nav&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;!-- Hero Section --&gt;&#10;  &lt;main class=&quot;hero&quot;&gt;&#10;    &lt;div class=&quot;card&quot;&gt;&#10;      &lt;!-- Feature badges --&gt;&#10;      &lt;div class=&quot;badge-container&quot;&gt;&#10;        &lt;span class=&quot;badge&quot;&gt; Fair Pricing&lt;/span&gt;&#10;        &lt;span class=&quot;badge&quot;&gt; Trusted Garages&lt;/span&gt;&#10;        &lt;span class=&quot;badge&quot;&gt; Transparent Estimates&lt;/span&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Main headline with car humor --&gt;&#10;      &lt;h1 class=&quot;hero-title&quot;&gt;&#10;        Stop paying mechanic rates that make your wallet scream louder than your engine&#10;      &lt;/h1&gt;&#10;&#10;      &lt;!-- Introduction paragraph --&gt;&#10;      &lt;p class=&quot;lead&quot;&gt;&#10;        Welcome to &lt;strong&gt;BrakePoint&lt;/strong&gt; — where your car's mysterious rattles meet honest estimates.&#10;        We decode what your mechanic &lt;em&gt;really&lt;/em&gt; means when they say &quot;it's gonna be expensive,&quot;&#10;        compare prices across garages, and help you avoid the dreaded &quot;while we're in there...&quot; upsell spiral.&#10;      &lt;/p&gt;&#10;&#10;      &lt;!-- Concept Cards Grid --&gt;&#10;      &lt;div class=&quot;concept-grid&quot;&gt;&#10;        &lt;div class=&quot;concept-card&quot; *ngFor=&quot;let concept of concepts&quot;&gt;&#10;          &lt;div class=&quot;concept-icon&quot;&gt;{{ concept.icon }}&lt;/div&gt;&#10;          &lt;h3 class=&quot;concept-title&quot;&gt;{{ concept.title }}&lt;/h3&gt;&#10;          &lt;p class=&quot;concept-desc&quot;&gt;{{ concept.description }}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Call-to-Action Buttons Row --&gt;&#10;      &lt;div class=&quot;cta-row&quot;&gt;&#10;        &lt;!-- Left button: Make an appointment --&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; (click)=&quot;onMakeAppointment()&quot;&gt;&#10;          &lt;svg class=&quot;btn-ic&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;            &lt;path d=&quot;M8 7V3m8 4V3M7 11h10M7 15h6&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;rect x=&quot;3&quot; y=&quot;5&quot; width=&quot;18&quot; height=&quot;16&quot; rx=&quot;2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          Make an appointment&#10;        &lt;/button&gt;&#10;&#10;        &lt;!-- Right button: View garages --&gt;&#10;        &lt;button class=&quot;btn btn-outline&quot; (click)=&quot;onViewGarages()&quot;&gt;&#10;          &lt;svg class=&quot;btn-ic&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;            &lt;path d=&quot;M3 11h18M5 7h14M7 15h10M21 11c0 5.5-4 9-9 9s-9-3.5-9-9&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          View garages&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Pro tip footer --&gt;&#10;      &lt;p class=&quot;micro&quot;&gt;&#10;         &lt;strong&gt;Pro tip:&lt;/strong&gt; Get 3 estimates in under 60 seconds. Your future self (and bank account) will high-five you.&#10;        No grease stains on your keyboard guaranteed. &#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/main&gt;&#10;&lt;/div&gt;&#10;" />
              <option name="updatedContent" value="&lt;div class=&quot;landing-root&quot;&gt;&#10;  &lt;!-- Navigation Bar --&gt;&#10;  &lt;header class=&quot;nav&quot;&gt;&#10;    &lt;div class=&quot;brand&quot;&gt;&#10;      &lt;!-- Car icon logo --&gt;&#10;      &lt;svg class=&quot;logo&quot; width=&quot;36&quot; height=&quot;36&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;        &lt;rect x=&quot;2&quot; y=&quot;8&quot; width=&quot;20&quot; height=&quot;8&quot; rx=&quot;2&quot; fill=&quot;currentColor&quot;/&gt;&#10;        &lt;circle cx=&quot;7&quot; cy=&quot;17&quot; r=&quot;1.8&quot; fill=&quot;currentColor&quot;/&gt;&#10;        &lt;circle cx=&quot;17&quot; cy=&quot;17&quot; r=&quot;1.8&quot; fill=&quot;currentColor&quot;/&gt;&#10;      &lt;/svg&gt;&#10;      &lt;span class=&quot;title&quot;&gt;BrakePoint&lt;/span&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;nav class=&quot;nav-actions&quot;&gt;&#10;      &lt;!-- More details button --&gt;&#10;      &lt;button class=&quot;icon-btn&quot; (click)=&quot;onMoreDetails()&quot; aria-label=&quot;More details&quot;&gt;&#10;        &lt;span class=&quot;icon&quot;&gt;⋯&lt;/span&gt;&#10;        &lt;span class=&quot;label&quot;&gt;More&lt;/span&gt;&#10;      &lt;/button&gt;&#10;&#10;      &lt;!-- Login and Register buttons (shown when not logged in) --&gt;&#10;      &lt;div *ngIf=&quot;!isLoggedIn&quot; class=&quot;auth-buttons&quot;&gt;&#10;        &lt;button class=&quot;btn-login&quot; (click)=&quot;onLogin()&quot; aria-label=&quot;Login&quot;&gt;&#10;          &lt;svg width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;            &lt;path d=&quot;M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;            &lt;polyline points=&quot;10 17 15 12 10 7&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;            &lt;line x1=&quot;15&quot; y1=&quot;12&quot; x2=&quot;3&quot; y2=&quot;12&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          &lt;span class=&quot;login-text&quot;&gt;Login&lt;/span&gt;&#10;        &lt;/button&gt;&#10;        &#10;        &lt;button class=&quot;btn-register&quot; (click)=&quot;onRegister()&quot; aria-label=&quot;Register&quot;&gt;&#10;          &lt;svg width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;            &lt;path d=&quot;M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;            &lt;circle cx=&quot;9&quot; cy=&quot;7&quot; r=&quot;4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;            &lt;line x1=&quot;19&quot; y1=&quot;8&quot; x2=&quot;19&quot; y2=&quot;14&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;            &lt;line x1=&quot;22&quot; y1=&quot;11&quot; x2=&quot;16&quot; y2=&quot;11&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          &lt;span class=&quot;register-text&quot;&gt;Register&lt;/span&gt;&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- User profile button (shown when logged in) --&gt;&#10;      &lt;button *ngIf=&quot;isLoggedIn&quot; class=&quot;user-btn&quot; (click)=&quot;onUserProfile()&quot; aria-label=&quot;User profile&quot;&gt;&#10;        &lt;svg width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;          &lt;path d=&quot;M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4z&quot; fill=&quot;currentColor&quot;/&gt;&#10;          &lt;path d=&quot;M4 20c0-3.3137 2.6863-6 6-6h4c3.3137 0 6 2.6863 6 6&quot; fill=&quot;currentColor&quot; opacity=&quot;0.9&quot;/&gt;&#10;        &lt;/svg&gt;&#10;        &lt;span class=&quot;user-name&quot;&gt;{{ userName }}&lt;/span&gt;&#10;      &lt;/button&gt;&#10;    &lt;/nav&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;!-- Hero Section --&gt;&#10;  &lt;main class=&quot;hero&quot;&gt;&#10;    &lt;div class=&quot;card&quot;&gt;&#10;      &lt;!-- Feature badges --&gt;&#10;      &lt;div class=&quot;badge-container&quot;&gt;&#10;        &lt;span class=&quot;badge&quot;&gt; Fair Pricing&lt;/span&gt;&#10;        &lt;span class=&quot;badge&quot;&gt; Trusted Garages&lt;/span&gt;&#10;        &lt;span class=&quot;badge&quot;&gt; Transparent Estimates&lt;/span&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Main headline with car humor --&gt;&#10;      &lt;h1 class=&quot;hero-title&quot;&gt;&#10;        Stop paying mechanic rates that make your wallet scream louder than your engine&#10;      &lt;/h1&gt;&#10;&#10;      &lt;!-- Introduction paragraph --&gt;&#10;      &lt;p class=&quot;lead&quot;&gt;&#10;        Welcome to &lt;strong&gt;BrakePoint&lt;/strong&gt; — where your car's mysterious rattles meet honest estimates.&#10;        We decode what your mechanic &lt;em&gt;really&lt;/em&gt; means when they say &quot;it's gonna be expensive,&quot;&#10;        compare prices across garages, and help you avoid the dreaded &quot;while we're in there...&quot; upsell spiral.&#10;      &lt;/p&gt;&#10;&#10;      &lt;!-- Concept Cards Grid --&gt;&#10;      &lt;div class=&quot;concept-grid&quot;&gt;&#10;        &lt;div class=&quot;concept-card&quot; *ngFor=&quot;let concept of concepts&quot;&gt;&#10;          &lt;div class=&quot;concept-icon&quot;&gt;{{ concept.icon }}&lt;/div&gt;&#10;          &lt;h3 class=&quot;concept-title&quot;&gt;{{ concept.title }}&lt;/h3&gt;&#10;          &lt;p class=&quot;concept-desc&quot;&gt;{{ concept.description }}&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Call-to-Action Buttons Row --&gt;&#10;      &lt;div class=&quot;cta-row&quot;&gt;&#10;        &lt;!-- Left button: Make an appointment --&gt;&#10;        &lt;button class=&quot;btn btn-primary&quot; (click)=&quot;onMakeAppointment()&quot;&gt;&#10;          &lt;svg class=&quot;btn-ic&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;            &lt;path d=&quot;M8 7V3m8 4V3M7 11h10M7 15h6&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;rect x=&quot;3&quot; y=&quot;5&quot; width=&quot;18&quot; height=&quot;16&quot; rx=&quot;2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; fill=&quot;none&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          Make an appointment&#10;        &lt;/button&gt;&#10;&#10;        &lt;!-- Right button: View garages --&gt;&#10;        &lt;button class=&quot;btn btn-outline&quot; (click)=&quot;onViewGarages()&quot;&gt;&#10;          &lt;svg class=&quot;btn-ic&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;            &lt;path d=&quot;M3 11h18M5 7h14M7 15h10M21 11c0 5.5-4 9-9 9s-9-3.5-9-9&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          View garages&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Pro tip footer --&gt;&#10;      &lt;p class=&quot;micro&quot;&gt;&#10;         &lt;strong&gt;Pro tip:&lt;/strong&gt; Get 3 estimates in under 60 seconds. Your future self (and bank account) will high-five you.&#10;        No grease stains on your keyboard guaranteed. &#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/main&gt;&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/app/main-page/main-page.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/app/main-page/main-page.ts" />
              <option name="originalContent" value="import { Component } from '@angular/core';&#10;import { CommonModule } from '@angular/common';&#10;import { Router } from '@angular/router';&#10;&#10;@Component({&#10;  selector: 'app-main-page',&#10;  standalone: true,&#10;  imports: [CommonModule],&#10;  templateUrl: './main-page.html',&#10;  styleUrls: ['./main-page.css']&#10;})&#10;export class MainPageComponent {&#10;  userName = 'Guest';&#10;&#10;  // Concept cards data showcasing the app's value propositions&#10;  concepts = [&#10;    {&#10;      icon: '',&#10;      title: 'Real-time Price Comparison',&#10;      description: 'See what multiple garages would charge for the same job. No more wondering if you\'re being taken for a ride (literally and financially).'&#10;    },&#10;    {&#10;      icon: '️',&#10;      title: 'Stop Overpaying Specialists',&#10;      description: 'Get AI-powered estimates before you commit. Know if that &quot;$800 brake job&quot; should really cost $300. Because your wallet has feelings too.'&#10;    },&#10;    {&#10;      icon: '',&#10;      title: 'Best Deal for Your Buck',&#10;      description: 'Quality + fair price = happy driver. We match you with garages that won\'t treat your wallet like a piñata at a mechanic\'s birthday party.'&#10;    }&#10;  ];&#10;&#10;  constructor(private router: Router) {}&#10;&#10;  /**&#10;   * Navigate to appointment booking flow&#10;   */&#10;  onMakeAppointment(): void {&#10;    console.log(' Navigate to appointment booking');&#10;    // TODO: Implement routing to appointment flow&#10;    alert(' Let\'s get your car back in shape! Redirecting to appointment booking...');&#10;  }&#10;&#10;  /**&#10;   * Navigate to garage directory/listing&#10;   */&#10;  onViewGarages(): void {&#10;    console.log(' Navigate to garage directory');&#10;    this.router.navigate(['/services']);&#10;  }&#10;&#10;  /**&#10;   * Open more details menu/panel&#10;   */&#10;  onMoreDetails(): void {&#10;    console.log('⋯ Show more details menu');&#10;    // TODO: Implement side panel or dropdown menu&#10;    alert(' More options coming soon!');&#10;  }&#10;&#10;  /**&#10;   * Navigate to user profile page&#10;   */&#10;  onUserProfile(): void {&#10;    console.log(' Navigate to user profile');&#10;    // TODO: Implement routing to profile page&#10;    alert(' User profile and settings coming soon!');&#10;  }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="import { Component } from '@angular/core';&#10;import { CommonModule } from '@angular/common';&#10;import { Router } from '@angular/router';&#10;&#10;@Component({&#10;  selector: 'app-main-page',&#10;  standalone: true,&#10;  imports: [CommonModule],&#10;  templateUrl: './main-page.html',&#10;  styleUrls: ['./main-page.css']&#10;})&#10;export class MainPageComponent {&#10;  userName = 'Guest';&#10;  isLoggedIn = false;&#10;&#10;  // Concept cards data showcasing the app's value propositions&#10;  concepts = [&#10;    {&#10;      icon: '',&#10;      title: 'Real-time Price Comparison',&#10;      description: 'See what multiple garages would charge for the same job. No more wondering if you\'re being taken for a ride (literally and financially).'&#10;    },&#10;    {&#10;      icon: '️',&#10;      title: 'Stop Overpaying Specialists',&#10;      description: 'Get AI-powered estimates before you commit. Know if that &quot;$800 brake job&quot; should really cost $300. Because your wallet has feelings too.'&#10;    },&#10;    {&#10;      icon: '',&#10;      title: 'Best Deal for Your Buck',&#10;      description: 'Quality + fair price = happy driver. We match you with garages that won\'t treat your wallet like a piñata at a mechanic\'s birthday party.'&#10;    }&#10;  ];&#10;&#10;  constructor(private router: Router) {}&#10;&#10;  /**&#10;   * Navigate to appointment booking flow&#10;   */&#10;  onMakeAppointment(): void {&#10;    console.log(' Navigate to appointment booking');&#10;    // TODO: Implement routing to appointment flow&#10;    alert(' Let\'s get your car back in shape! Redirecting to appointment booking...');&#10;  }&#10;&#10;  /**&#10;   * Navigate to garage directory/listing&#10;   */&#10;  onViewGarages(): void {&#10;    console.log(' Navigate to garage directory');&#10;    this.router.navigate(['/services']);&#10;  }&#10;&#10;  /**&#10;   * Open more details menu/panel&#10;   */&#10;  onMoreDetails(): void {&#10;    console.log('⋯ Show more details menu');&#10;    // TODO: Implement side panel or dropdown menu&#10;    alert(' More options coming soon!');&#10;  }&#10;&#10;  /**&#10;   * Navigate to user profile page&#10;   */&#10;  onUserProfile(): void {&#10;    console.log(' Navigate to user profile');&#10;    if (this.isLoggedIn) {&#10;      // TODO: Implement routing to profile page&#10;      alert(' User profile and settings coming soon!');&#10;    } else {&#10;      // Redirect to login if not logged in&#10;      this.router.navigate(['/login']);&#10;    }&#10;  }&#10;&#10;  /**&#10;   * Navigate to login page&#10;   */&#10;  onLogin(): void {&#10;    console.log(' Navigate to login page');&#10;    this.router.navigate(['/login']);&#10;  }&#10;&#10;  /**&#10;   * Navigate to register page&#10;   */&#10;  onRegister(): void {&#10;    console.log(' Navigate to register page');&#10;    this.router.navigate(['/register']);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/app/register-page/register-page.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/app/register-page/register-page.html" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="&lt;div class=&quot;register-root&quot;&gt;&#10;  &lt;!-- Background decoration --&gt;&#10;  &lt;div class=&quot;bg-decoration&quot;&gt;&lt;/div&gt;&#10;&#10;  &lt;!-- Register Card --&gt;&#10;  &lt;div class=&quot;register-container&quot;&gt;&#10;    &lt;div class=&quot;register-card&quot;&gt;&#10;      &lt;!-- Header --&gt;&#10;      &lt;div class=&quot;register-header&quot;&gt;&#10;        &lt;!-- Logo --&gt;&#10;        &lt;svg class=&quot;register-logo&quot; width=&quot;48&quot; height=&quot;48&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot;&gt;&#10;          &lt;rect x=&quot;2&quot; y=&quot;8&quot; width=&quot;20&quot; height=&quot;8&quot; rx=&quot;2&quot; fill=&quot;currentColor&quot;/&gt;&#10;          &lt;circle cx=&quot;7&quot; cy=&quot;17&quot; r=&quot;1.8&quot; fill=&quot;currentColor&quot;/&gt;&#10;          &lt;circle cx=&quot;17&quot; cy=&quot;17&quot; r=&quot;1.8&quot; fill=&quot;currentColor&quot;/&gt;&#10;        &lt;/svg&gt;&#10;&#10;        &lt;h1 class=&quot;register-title&quot;&gt;Join BrakePoint&lt;/h1&gt;&#10;        &lt;p class=&quot;register-subtitle&quot;&gt;&#10;          Start saving on car repairs today. Your wallet will thank you later.&#10;        &lt;/p&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Error Message --&gt;&#10;      &lt;div class=&quot;error-message&quot; *ngIf=&quot;errorMessage&quot;&gt;&#10;        &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;          &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;          &lt;path d=&quot;M12 8v4M12 16h.01&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;        &lt;/svg&gt;&#10;        {{ errorMessage }}&#10;      &lt;/div&gt;&#10;&#10;      &lt;!-- Register Form --&gt;&#10;      &lt;form class=&quot;register-form&quot; (ngSubmit)=&quot;onSubmit()&quot;&gt;&#10;        &lt;!-- Account Type Selection --&gt;&#10;        &lt;div class=&quot;account-type-group&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Account Type&lt;/label&gt;&#10;          &lt;div class=&quot;radio-group&quot;&gt;&#10;            &lt;label class=&quot;radio-label&quot; [class.active]=&quot;accountType === 'user'&quot;&gt;&#10;              &lt;input&#10;                type=&quot;radio&quot;&#10;                name=&quot;accountType&quot;&#10;                value=&quot;user&quot;&#10;                [(ngModel)]=&quot;accountType&quot;&#10;                (change)=&quot;setAccountType('user')&quot;&#10;                class=&quot;radio-input&quot;&#10;                [disabled]=&quot;isLoading&quot;&#10;              /&gt;&#10;              &lt;span class=&quot;radio-custom&quot;&gt;&lt;/span&gt;&#10;              &lt;span class=&quot;radio-text&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                  &lt;path d=&quot;M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;                  &lt;circle cx=&quot;12&quot; cy=&quot;7&quot; r=&quot;4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                User&#10;              &lt;/span&gt;&#10;            &lt;/label&gt;&#10;            &#10;            &lt;label class=&quot;radio-label&quot; [class.active]=&quot;accountType === 'service'&quot;&gt;&#10;              &lt;input&#10;                type=&quot;radio&quot;&#10;                name=&quot;accountType&quot;&#10;                value=&quot;service&quot;&#10;                [(ngModel)]=&quot;accountType&quot;&#10;                (change)=&quot;setAccountType('service')&quot;&#10;                class=&quot;radio-input&quot;&#10;                [disabled]=&quot;isLoading&quot;&#10;              /&gt;&#10;              &lt;span class=&quot;radio-custom&quot;&gt;&lt;/span&gt;&#10;              &lt;span class=&quot;radio-text&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                  &lt;path d=&quot;M12 2L2 7l10 5 10-5-10-5z&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;                  &lt;path d=&quot;M2 17l10 5 10-5M2 12l10 5 10-5&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                Service&#10;              &lt;/span&gt;&#10;            &lt;/label&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- User Fields --&gt;&#10;        &lt;div *ngIf=&quot;accountType === 'user'&quot; class=&quot;form-group&quot;&gt;&#10;          &lt;label for=&quot;fullName&quot; class=&quot;form-label&quot;&gt;Full Name&lt;/label&gt;&#10;          &lt;div class=&quot;input-wrapper&quot;&gt;&#10;            &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;path d=&quot;M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;              &lt;circle cx=&quot;12&quot; cy=&quot;7&quot; r=&quot;4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;input&#10;              type=&quot;text&quot;&#10;              id=&quot;fullName&quot;&#10;              name=&quot;fullName&quot;&#10;              [(ngModel)]=&quot;fullName&quot;&#10;              placeholder=&quot;John Doe&quot;&#10;              class=&quot;form-input&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;              required&#10;            /&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Service Fields --&gt;&#10;        &lt;ng-container *ngIf=&quot;accountType === 'service'&quot;&gt;&#10;          &lt;div class=&quot;form-group&quot;&gt;&#10;            &lt;label for=&quot;serviceName&quot; class=&quot;form-label&quot;&gt;Service Name&lt;/label&gt;&#10;            &lt;div class=&quot;input-wrapper&quot;&gt;&#10;              &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;path d=&quot;M12 2L2 7l10 5 10-5-10-5z&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;                &lt;path d=&quot;M2 17l10 5 10-5M2 12l10 5 10-5&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;input&#10;                type=&quot;text&quot;&#10;                id=&quot;serviceName&quot;&#10;                name=&quot;serviceName&quot;&#10;                [(ngModel)]=&quot;serviceName&quot;&#10;                placeholder=&quot;Auto Service Center&quot;&#10;                class=&quot;form-input&quot;&#10;                [disabled]=&quot;isLoading&quot;&#10;                required&#10;              /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div class=&quot;form-group&quot;&gt;&#10;            &lt;label for=&quot;serviceCUI&quot; class=&quot;form-label&quot;&gt;Service CUI&lt;/label&gt;&#10;            &lt;div class=&quot;input-wrapper&quot;&gt;&#10;              &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;rect x=&quot;3&quot; y=&quot;4&quot; width=&quot;18&quot; height=&quot;16&quot; rx=&quot;2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;                &lt;path d=&quot;M7 8h10M7 12h6&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;input&#10;                type=&quot;text&quot;&#10;                id=&quot;serviceCUI&quot;&#10;                name=&quot;serviceCUI&quot;&#10;                [(ngModel)]=&quot;serviceCUI&quot;&#10;                placeholder=&quot;RO12345678&quot;&#10;                class=&quot;form-input&quot;&#10;                [disabled]=&quot;isLoading&quot;&#10;                required&#10;              /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div class=&quot;form-group&quot;&gt;&#10;            &lt;label for=&quot;location&quot; class=&quot;form-label&quot;&gt;Location&lt;/label&gt;&#10;            &lt;div class=&quot;input-wrapper&quot;&gt;&#10;              &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;path d=&quot;M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;                &lt;circle cx=&quot;12&quot; cy=&quot;10&quot; r=&quot;3&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;input&#10;                type=&quot;text&quot;&#10;                id=&quot;location&quot;&#10;                name=&quot;location&quot;&#10;                [(ngModel)]=&quot;location&quot;&#10;                placeholder=&quot;123 Main St, City&quot;&#10;                class=&quot;form-input&quot;&#10;                [disabled]=&quot;isLoading&quot;&#10;                required&#10;              /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/ng-container&gt;&#10;&#10;        &lt;!-- Email Field --&gt;&#10;        &lt;div class=&quot;form-group&quot;&gt;&#10;          &lt;label for=&quot;email&quot; class=&quot;form-label&quot;&gt;Email Address&lt;/label&gt;&#10;          &lt;div class=&quot;input-wrapper&quot;&gt;&#10;            &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;rect x=&quot;3&quot; y=&quot;5&quot; width=&quot;18&quot; height=&quot;14&quot; rx=&quot;2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M3 7l9 6 9-6&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;input&#10;              type=&quot;email&quot;&#10;              id=&quot;email&quot;&#10;              name=&quot;email&quot;&#10;              [(ngModel)]=&quot;email&quot;&#10;              placeholder=&quot;your.email@example.com&quot;&#10;              class=&quot;form-input&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;              required&#10;            /&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Password Field --&gt;&#10;        &lt;div class=&quot;form-group&quot;&gt;&#10;          &lt;label for=&quot;password&quot; class=&quot;form-label&quot;&gt;Password&lt;/label&gt;&#10;          &lt;div class=&quot;input-wrapper&quot;&gt;&#10;            &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;rect x=&quot;5&quot; y=&quot;11&quot; width=&quot;14&quot; height=&quot;10&quot; rx=&quot;2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M8 11V7a4 4 0 018 0v4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;input&#10;              [type]=&quot;showPassword ? 'text' : 'password'&quot;&#10;              id=&quot;password&quot;&#10;              name=&quot;password&quot;&#10;              [(ngModel)]=&quot;password&quot;&#10;              placeholder=&quot;At least 6 characters&quot;&#10;              class=&quot;form-input&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;              required&#10;            /&gt;&#10;            &lt;button&#10;              type=&quot;button&quot;&#10;              class=&quot;toggle-password&quot;&#10;              (click)=&quot;togglePasswordVisibility()&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;              aria-label=&quot;Toggle password visibility&quot;&#10;            &gt;&#10;              &lt;svg *ngIf=&quot;!showPassword&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;path d=&quot;M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7z&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;                &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;3&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;svg *ngIf=&quot;showPassword&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;path d=&quot;M17.94 17.94A10.07 10.07 0 0112 20c-7 0-10-8-10-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 10 8 10 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;                &lt;line x1=&quot;1&quot; y1=&quot;1&quot; x2=&quot;23&quot; y2=&quot;23&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;              &lt;/svg&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Confirm Password Field --&gt;&#10;        &lt;div class=&quot;form-group&quot;&gt;&#10;          &lt;label for=&quot;confirmPassword&quot; class=&quot;form-label&quot;&gt;Confirm Password&lt;/label&gt;&#10;          &lt;div class=&quot;input-wrapper&quot;&gt;&#10;            &lt;svg class=&quot;input-icon&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;rect x=&quot;5&quot; y=&quot;11&quot; width=&quot;14&quot; height=&quot;10&quot; rx=&quot;2&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M8 11V7a4 4 0 018 0v4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;input&#10;              [type]=&quot;showConfirmPassword ? 'text' : 'password'&quot;&#10;              id=&quot;confirmPassword&quot;&#10;              name=&quot;confirmPassword&quot;&#10;              [(ngModel)]=&quot;confirmPassword&quot;&#10;              placeholder=&quot;Re-enter your password&quot;&#10;              class=&quot;form-input&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;              required&#10;            /&gt;&#10;            &lt;button&#10;              type=&quot;button&quot;&#10;              class=&quot;toggle-password&quot;&#10;              (click)=&quot;toggleConfirmPasswordVisibility()&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;              aria-label=&quot;Toggle confirm password visibility&quot;&#10;            &gt;&#10;              &lt;svg *ngIf=&quot;!showConfirmPassword&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;path d=&quot;M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7z&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;                &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;3&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;svg *ngIf=&quot;showConfirmPassword&quot; width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;                &lt;path d=&quot;M17.94 17.94A10.07 10.07 0 0112 20c-7 0-10-8-10-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 10 8 10 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;                &lt;line x1=&quot;1&quot; y1=&quot;1&quot; x2=&quot;23&quot; y2=&quot;23&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;              &lt;/svg&gt;&#10;            &lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Terms and Conditions --&gt;&#10;        &lt;div class=&quot;form-options&quot;&gt;&#10;          &lt;label class=&quot;checkbox-label&quot;&gt;&#10;            &lt;input&#10;              type=&quot;checkbox&quot;&#10;              name=&quot;agreeToTerms&quot;&#10;              [(ngModel)]=&quot;agreeToTerms&quot;&#10;              class=&quot;checkbox-input&quot;&#10;              [disabled]=&quot;isLoading&quot;&#10;            /&gt;&#10;            &lt;span class=&quot;checkbox-custom&quot;&gt;&lt;/span&gt;&#10;            &lt;span class=&quot;checkbox-text&quot;&gt;I agree to the &lt;a href=&quot;#&quot; class=&quot;terms-link&quot;&gt;Terms and Conditions&lt;/a&gt;&lt;/span&gt;&#10;          &lt;/label&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Submit Button --&gt;&#10;        &lt;button type=&quot;submit&quot; class=&quot;btn-submit&quot; [disabled]=&quot;isLoading&quot;&gt;&#10;          &lt;span *ngIf=&quot;!isLoading&quot;&gt;Create Account&lt;/span&gt;&#10;          &lt;span *ngIf=&quot;isLoading&quot; class=&quot;loading-spinner&quot;&gt;&#10;            &lt;svg width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;3&quot; opacity=&quot;0.25&quot;/&gt;&#10;              &lt;path d=&quot;M12 2a10 10 0 0110 10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;3&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            Creating account...&#10;          &lt;/span&gt;&#10;        &lt;/button&gt;&#10;      &lt;/form&gt;&#10;&#10;      &lt;!-- Footer --&gt;&#10;      &lt;div class=&quot;register-footer&quot;&gt;&#10;        &lt;p class=&quot;footer-text&quot;&gt;&#10;          Already have an account?&#10;          &lt;button type=&quot;button&quot; class=&quot;link-btn&quot; (click)=&quot;onLogin()&quot;&gt;&#10;            Sign in here&#10;          &lt;/button&gt;&#10;        &lt;/p&gt;&#10;&#10;        &lt;button type=&quot;button&quot; class=&quot;back-home-btn&quot; (click)=&quot;onBackToHome()&quot;&gt;&#10;          &lt;svg width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;            &lt;path d=&quot;M19 12H5M12 19l-7-7 7-7&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          Back to home&#10;        &lt;/button&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- Side Info --&gt;&#10;    &lt;div class=&quot;info-panel&quot;&gt;&#10;      &lt;div class=&quot;info-content&quot;&gt;&#10;        &lt;h2 class=&quot;info-title&quot;&gt; Why Join BrakePoint?&lt;/h2&gt;&#10;        &lt;ul class=&quot;info-list&quot;&gt;&#10;          &lt;li&gt;&#10;            &lt;svg class=&quot;check-icon&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M9 12l2 2 4-4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            Compare prices from multiple garages&#10;          &lt;/li&gt;&#10;          &lt;li&gt;&#10;            &lt;svg class=&quot;check-icon&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M9 12l2 2 4-4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            Get AI-powered repair estimates&#10;          &lt;/li&gt;&#10;          &lt;li&gt;&#10;            &lt;svg class=&quot;check-icon&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M9 12l2 2 4-4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            Book appointments with trusted garages&#10;          &lt;/li&gt;&#10;          &lt;li&gt;&#10;            &lt;svg class=&quot;check-icon&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot;&gt;&#10;              &lt;circle cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;/&gt;&#10;              &lt;path d=&quot;M9 12l2 2 4-4&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            Track your car's maintenance history&#10;          &lt;/li&gt;&#10;        &lt;/ul&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/div&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/app/register-page/register-page.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/app/register-page/register-page.ts" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="import { Component } from '@angular/core';&#10;import { CommonModule } from '@angular/common';&#10;import { FormsModule } from '@angular/forms';&#10;import { Router } from '@angular/router';&#10;&#10;@Component({&#10;  selector: 'app-register-page',&#10;  standalone: true,&#10;  imports: [CommonModule, FormsModule],&#10;  templateUrl: './register-page.html',&#10;  styleUrls: ['./register-page.css']&#10;})&#10;export class RegisterPageComponent {&#10;  accountType: 'user' | 'service' = 'user';&#10;  fullName = '';&#10;  serviceName = '';&#10;  serviceCUI = '';&#10;  location = '';&#10;  email = '';&#10;  password = '';&#10;  confirmPassword = '';&#10;  agreeToTerms = false;&#10;  showPassword = false;&#10;  showConfirmPassword = false;&#10;  isLoading = false;&#10;  errorMessage = '';&#10;&#10;  constructor(private router: Router) {}&#10;&#10;  /**&#10;   * Set account type&#10;   */&#10;  setAccountType(type: 'user' | 'service'): void {&#10;    this.accountType = type;&#10;    this.errorMessage = '';&#10;  }&#10;&#10;  /**&#10;   * Toggle password visibility&#10;   */&#10;  togglePasswordVisibility(): void {&#10;    this.showPassword = !this.showPassword;&#10;  }&#10;&#10;  /**&#10;   * Toggle confirm password visibility&#10;   */&#10;  toggleConfirmPasswordVisibility(): void {&#10;    this.showConfirmPassword = !this.showConfirmPassword;&#10;  }&#10;&#10;  /**&#10;   * Handle form submission&#10;   */&#10;  onSubmit(): void {&#10;    this.errorMessage = '';&#10;&#10;    // Basic validation based on account type&#10;    if (this.accountType === 'user') {&#10;      if (!this.fullName || !this.email || !this.password || !this.confirmPassword) {&#10;        this.errorMessage = 'Please fill in all fields';&#10;        return;&#10;      }&#10;    } else {&#10;      if (!this.serviceName || !this.serviceCUI || !this.location || !this.email || !this.password || !this.confirmPassword) {&#10;        this.errorMessage = 'Please fill in all fields';&#10;        return;&#10;      }&#10;    }&#10;&#10;    if (!this.isValidEmail(this.email)) {&#10;      this.errorMessage = 'Please enter a valid email address';&#10;      return;&#10;    }&#10;&#10;    if (this.password.length &lt; 6) {&#10;      this.errorMessage = 'Password must be at least 6 characters long';&#10;      return;&#10;    }&#10;&#10;    if (this.password !== this.confirmPassword) {&#10;      this.errorMessage = 'Passwords do not match';&#10;      return;&#10;    }&#10;&#10;    if (!this.agreeToTerms) {&#10;      this.errorMessage = 'Please agree to the terms and conditions';&#10;      return;&#10;    }&#10;&#10;    this.isLoading = true;&#10;&#10;    // TODO: Implement actual registration logic&#10;    setTimeout(() =&gt; {&#10;      this.isLoading = false;&#10;      console.log('Registration attempt:', {&#10;        accountType: this.accountType,&#10;        ...(this.accountType === 'user' ? { fullName: this.fullName } : { serviceName: this.serviceName, serviceCUI: this.serviceCUI, location: this.location }),&#10;        email: this.email&#10;      });&#10;&#10;      // Simulate successful registration&#10;      const message = this.accountType === 'user' &#10;        ? ' Welcome aboard! Your account has been created.'&#10;        : ' Welcome! Your service account has been created.';&#10;      alert(message);&#10;      this.router.navigate(['/main-page']);&#10;    }, 1500);&#10;  }&#10;&#10;  /**&#10;   * Validate email format&#10;   */&#10;  private isValidEmail(email: string): boolean {&#10;    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;&#10;    return emailRegex.test(email);&#10;  }&#10;&#10;  /**&#10;   * Navigate to login page&#10;   */&#10;  onLogin(): void {&#10;    console.log('Navigate to login');&#10;    this.router.navigate(['/login']);&#10;  }&#10;&#10;  /**&#10;   * Navigate back to main page&#10;   */&#10;  onBackToHome(): void {&#10;    this.router.navigate(['/main-page']);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/styles.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/styles.css" />
              <option name="originalContent" value="/* You can add global styles to this file, and also import other style files */&#10;&#10;:root {&#10;  /* Color Palette */&#10;  --color-dark: #222831;&#10;  --color-secondary: #393E46;&#10;  --color-accent: #948979;&#10;  --color-light: #DFD0B8;&#10;}&#10;&#10;* {&#10;  margin: 0;&#10;  padding: 0;&#10;  box-sizing: border-box;&#10;}&#10;&#10;body {&#10;  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;  background-color: var(--color-dark);&#10;  color: var(--color-light);&#10;}&#10;" />
              <option name="updatedContent" value="/* You can add global styles to this file, and also import other style files */&#10;&#10;/* ========================================&#10;   GLOBAL CSS VARIABLES &amp; DESIGN SYSTEM&#10;   ======================================== */&#10;&#10;/* &#10;  Design Principles:&#10;  - Dark, sophisticated aesthetic with warm brown accents&#10;  - Accessibility-first approach (WCAG AA compliant)&#10;  - Mobile-first responsive design&#10;  - Consistent spacing using 4px grid system&#10;  - Smooth transitions for enhanced UX&#10;  - Layered depth through shadows and overlays&#10;*/&#10;&#10;:root {&#10;  /* Color Palette */&#10;  --color-dark: #222831;&#10;  --color-secondary: #393E46;&#10;  --color-accent: #948979;&#10;  --color-light: #DFD0B8;&#10;&#10;  /* Extended Palette */&#10;  --color-accent-light: #b8a895;&#10;  --color-accent-dark: #7a6f5f;&#10;  --color-bg-elevated: #2d333b;&#10;  --color-bg-card: rgba(57, 62, 70, 0.95);&#10;  &#10;  /* Text Colors */&#10;  --color-text-primary: #DFD0B8;&#10;  --color-text-secondary: #b8a895;&#10;  --color-text-muted: #8a7f6f;&#10;  &#10;  /* Status Colors */&#10;  --color-success: #10b981;&#10;  --color-warning: #f59e0b;&#10;  --color-error: #ef4444;&#10;  --color-info: #3b82f6;&#10;  &#10;  /* Shadows - layered depth for dark theme */&#10;  --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.3);&#10;  --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.4);&#10;  --shadow-lg: 0 8px 30px rgba(0, 0, 0, 0.5);&#10;  --shadow-xl: 0 12px 40px rgba(0, 0, 0, 0.6);&#10;  --shadow-glow: 0 0 20px rgba(148, 137, 121, 0.2);&#10;  --shadow-accent: 0 4px 20px rgba(148, 137, 121, 0.3);&#10;  &#10;  /* Spacing Scale (4px grid system) */&#10;  --space-xs: 8px;&#10;  --space-sm: 12px;&#10;  --space-md: 16px;&#10;  --space-lg: 24px;&#10;  --space-xl: 32px;&#10;  --space-2xl: 48px;&#10;  --space-3xl: 64px;&#10;  &#10;  /* Typography Scale */&#10;  --font-xs: 0.75rem;    /* 12px */&#10;  --font-sm: 0.875rem;   /* 14px */&#10;  --font-base: 1rem;     /* 16px */&#10;  --font-lg: 1.125rem;   /* 18px */&#10;  --font-xl: 1.5rem;     /* 24px */&#10;  --font-2xl: 1.875rem;  /* 30px */&#10;  --font-3xl: 2.25rem;   /* 36px */&#10;  --font-4xl: 3rem;      /* 48px */&#10;  &#10;  /* Font Weights */&#10;  --font-normal: 400;&#10;  --font-medium: 500;&#10;  --font-semibold: 600;&#10;  --font-bold: 700;&#10;  --font-extrabold: 800;&#10;  &#10;  /* Border Radius */&#10;  --radius-sm: 6px;&#10;  --radius-md: 10px;&#10;  --radius-lg: 14px;&#10;  --radius-xl: 20px;&#10;  --radius-full: 9999px;&#10;  &#10;  /* Transitions */&#10;  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);&#10;  --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);&#10;  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);&#10;  &#10;  /* Borders */&#10;  --border-subtle: 1px solid rgba(223, 208, 184, 0.1);&#10;  --border-medium: 1px solid rgba(223, 208, 184, 0.2);&#10;  --border-accent: 2px solid var(--color-accent);&#10;  &#10;  /* Z-index Scale */&#10;  --z-base: 1;&#10;  --z-elevated: 10;&#10;  --z-dropdown: 100;&#10;  --z-sticky: 500;&#10;  --z-modal: 1000;&#10;  --z-toast: 2000;&#10;}&#10;&#10;* {&#10;  margin: 0;&#10;  padding: 0;&#10;  box-sizing: border-box;&#10;}&#10;&#10;body {&#10;  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;&#10;  background-color: var(--color-dark);&#10;  color: var(--color-light);&#10;  line-height: 1.6;&#10;  -webkit-font-smoothing: antialiased;&#10;  -moz-osx-font-smoothing: grayscale;&#10;}&#10;&#10;/* ========================================&#10;   UTILITY CLASSES&#10;   ======================================== */&#10;&#10;.container {&#10;  max-width: 1200px;&#10;  margin: 0 auto;&#10;  padding: 0 var(--space-md);&#10;}&#10;&#10;.text-center { text-align: center; }&#10;.text-muted { color: var(--color-text-muted); }&#10;.fw-bold { font-weight: var(--font-bold); }&#10;.fw-semibold { font-weight: var(--font-semibold); }&#10;&#10;/* ========================================&#10;   SCROLLBAR STYLING&#10;   ======================================== */&#10;&#10;::-webkit-scrollbar {&#10;  width: 12px;&#10;  height: 12px;&#10;}&#10;&#10;::-webkit-scrollbar-track {&#10;  background: var(--color-dark);&#10;}&#10;&#10;::-webkit-scrollbar-thumb {&#10;  background: var(--color-secondary);&#10;  border-radius: var(--radius-sm);&#10;  border: 2px solid var(--color-dark);&#10;}&#10;&#10;::-webkit-scrollbar-thumb:hover {&#10;  background: var(--color-accent);&#10;}&#10;&#10;/* Firefox scrollbar */&#10;* {&#10;  scrollbar-width: thin;&#10;  scrollbar-color: var(--color-secondary) var(--color-dark);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>